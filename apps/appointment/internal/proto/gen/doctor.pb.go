// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: doctor.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===== Запрос доступности конкретного времени =====
type CheckTimeAvailabilityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	SlotTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=slot_time,json=slotTime,proto3" json:"slot_time,omitempty"` // Конкретное время для проверки
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckTimeAvailabilityRequest) Reset() {
	*x = CheckTimeAvailabilityRequest{}
	mi := &file_doctor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckTimeAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTimeAvailabilityRequest) ProtoMessage() {}

func (x *CheckTimeAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTimeAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*CheckTimeAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_doctor_proto_rawDescGZIP(), []int{0}
}

func (x *CheckTimeAvailabilityRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *CheckTimeAvailabilityRequest) GetSlotTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SlotTime
	}
	return nil
}

type CheckTimeAvailabilityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable   bool                   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // Причина недоступности (например, "already booked")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckTimeAvailabilityResponse) Reset() {
	*x = CheckTimeAvailabilityResponse{}
	mi := &file_doctor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckTimeAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTimeAvailabilityResponse) ProtoMessage() {}

func (x *CheckTimeAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTimeAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*CheckTimeAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_doctor_proto_rawDescGZIP(), []int{1}
}

func (x *CheckTimeAvailabilityResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *CheckTimeAvailabilityResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// ===== Запрос всех свободных слотов =====
type GetAvailableSlotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      string                 `protobuf:"bytes,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // Начало периода (опционально)
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // Конец периода (опционально)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableSlotsRequest) Reset() {
	*x = GetAvailableSlotsRequest{}
	mi := &file_doctor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableSlotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableSlotsRequest) ProtoMessage() {}

func (x *GetAvailableSlotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableSlotsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableSlotsRequest) Descriptor() ([]byte, []int) {
	return file_doctor_proto_rawDescGZIP(), []int{2}
}

func (x *GetAvailableSlotsRequest) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetAvailableSlotsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetAvailableSlotsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type TimeSlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // "free", "booked", "break"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	mi := &file_doctor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_doctor_proto_rawDescGZIP(), []int{3}
}

func (x *TimeSlot) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeSlot) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TimeSlot) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAvailableSlotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slots         []*TimeSlot            `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableSlotsResponse) Reset() {
	*x = GetAvailableSlotsResponse{}
	mi := &file_doctor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableSlotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableSlotsResponse) ProtoMessage() {}

func (x *GetAvailableSlotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableSlotsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableSlotsResponse) Descriptor() ([]byte, []int) {
	return file_doctor_proto_rawDescGZIP(), []int{4}
}

func (x *GetAvailableSlotsResponse) GetSlots() []*TimeSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

var File_doctor_proto protoreflect.FileDescriptor

const file_doctor_proto_rawDesc = "" +
	"\n" +
	"\fdoctor.proto\x12\tdoctor.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"t\n" +
	"\x1cCheckTimeAvailabilityRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\x127\n" +
	"\tslot_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bslotTime\"Z\n" +
	"\x1dCheckTimeAvailabilityResponse\x12!\n" +
	"\fis_available\x18\x01 \x01(\bR\visAvailable\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xa9\x01\n" +
	"\x18GetAvailableSlotsRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\tR\bdoctorId\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"\x94\x01\n" +
	"\bTimeSlot\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"F\n" +
	"\x19GetAvailableSlotsResponse\x12)\n" +
	"\x05slots\x18\x01 \x03(\v2\x13.doctor.v1.TimeSlotR\x05slots2\xdb\x01\n" +
	"\rDoctorService\x12j\n" +
	"\x15CheckTimeAvailability\x12'.doctor.v1.CheckTimeAvailabilityRequest\x1a(.doctor.v1.CheckTimeAvailabilityResponse\x12^\n" +
	"\x11GetAvailableSlots\x12#.doctor.v1.GetAvailableSlotsRequest\x1a$.doctor.v1.GetAvailableSlotsResponseBPZNgithub.com/Ruletk/OnlineClinic/apps/appointment/internal/proto/doctor;doctorpbb\x06proto3"

var (
	file_doctor_proto_rawDescOnce sync.Once
	file_doctor_proto_rawDescData []byte
)

func file_doctor_proto_rawDescGZIP() []byte {
	file_doctor_proto_rawDescOnce.Do(func() {
		file_doctor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_doctor_proto_rawDesc), len(file_doctor_proto_rawDesc)))
	})
	return file_doctor_proto_rawDescData
}

var file_doctor_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_doctor_proto_goTypes = []any{
	(*CheckTimeAvailabilityRequest)(nil),  // 0: doctor.v1.CheckTimeAvailabilityRequest
	(*CheckTimeAvailabilityResponse)(nil), // 1: doctor.v1.CheckTimeAvailabilityResponse
	(*GetAvailableSlotsRequest)(nil),      // 2: doctor.v1.GetAvailableSlotsRequest
	(*TimeSlot)(nil),                      // 3: doctor.v1.TimeSlot
	(*GetAvailableSlotsResponse)(nil),     // 4: doctor.v1.GetAvailableSlotsResponse
	(*timestamppb.Timestamp)(nil),         // 5: google.protobuf.Timestamp
}
var file_doctor_proto_depIdxs = []int32{
	5, // 0: doctor.v1.CheckTimeAvailabilityRequest.slot_time:type_name -> google.protobuf.Timestamp
	5, // 1: doctor.v1.GetAvailableSlotsRequest.start_date:type_name -> google.protobuf.Timestamp
	5, // 2: doctor.v1.GetAvailableSlotsRequest.end_date:type_name -> google.protobuf.Timestamp
	5, // 3: doctor.v1.TimeSlot.start_time:type_name -> google.protobuf.Timestamp
	5, // 4: doctor.v1.TimeSlot.end_time:type_name -> google.protobuf.Timestamp
	3, // 5: doctor.v1.GetAvailableSlotsResponse.slots:type_name -> doctor.v1.TimeSlot
	0, // 6: doctor.v1.DoctorService.CheckTimeAvailability:input_type -> doctor.v1.CheckTimeAvailabilityRequest
	2, // 7: doctor.v1.DoctorService.GetAvailableSlots:input_type -> doctor.v1.GetAvailableSlotsRequest
	1, // 8: doctor.v1.DoctorService.CheckTimeAvailability:output_type -> doctor.v1.CheckTimeAvailabilityResponse
	4, // 9: doctor.v1.DoctorService.GetAvailableSlots:output_type -> doctor.v1.GetAvailableSlotsResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_doctor_proto_init() }
func file_doctor_proto_init() {
	if File_doctor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_doctor_proto_rawDesc), len(file_doctor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doctor_proto_goTypes,
		DependencyIndexes: file_doctor_proto_depIdxs,
		MessageInfos:      file_doctor_proto_msgTypes,
	}.Build()
	File_doctor_proto = out.File
	file_doctor_proto_goTypes = nil
	file_doctor_proto_depIdxs = nil
}
